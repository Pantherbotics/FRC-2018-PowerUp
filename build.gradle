import jaci.gradle.deploy.artifact.FileCollectionArtifact

plugins {
    id "java"
    id "eclipse"
    id "idea"
    id "edu.wpi.first.GradleRIO" version "2019.0.0-alpha-3"
    //id "com.snobot.simulator.plugin.SnobotSimulatorPlugin" version "2018-1.0.0"
}

def TEAM = 3863
def ROBOT_CLASS = "frc.team3863.robot.Robot"

// Define my targets (RoboRIO) and artifacts (deployable files)
// This is added by GradleRIO's backing project EmbeddedTools.
deploy {
    targets {
        target("roborio", edu.wpi.first.gradlerio.frc.RoboRIO) {
            team = TEAM
        }
    }
    artifacts {
        artifact('frcJava', edu.wpi.first.gradlerio.frc.FRCJavaArtifact) {
            targets << "roborio"
        }

        artifact('paths', FileCollectionArtifact) {
            files = project.fileTree(dir: 'src/main/resources/paths')
            directory = '/home/lvuser/paths'
            targets << "roborio"
        }

    }
}

// Defining my dependencies. In this case, WPILib (+ friends), CTRE Phoenix (Talon SRX)
// and NavX.
dependencies {
    compile wpilib()
    compile ctre()
    compile navx()
    compile pathfinder()
    compile openrio.powerup.matchData()

    //testCompile snobotSimCompile()
    //testCompile snobotSimJavaCompile()
}

// Setting up my Jar File. In this case, adding all libraries into the main jar ('fat jar')
// in order to make them all available at runtime. Also adding the manifest so WPILib
// knows where to look for our Robot Class.
jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest edu.wpi.first.gradlerio.GradleRIOPlugin.javaManifest(ROBOT_CLASS)
}


task wrapper(type: Wrapper) {
    gradleVersion = '4.9'
}